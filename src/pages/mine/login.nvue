<template>
  <div class="container" :style='{minHeight: height}'>
    <div class="name">
      <image class="name-logo" src='../../static/logo.png'/>
      <text class="name-h1">GoodIns</text>
    </div>
    <!-- #ifdef APP-PLUS -->
    <div class="input">
      <image class="input-icon" src='../../static/phone.png'/>
      <input class="input-phone" v-model='form.phone' maxlength="11" placeholder="请输入手机号">
    </div>
    <text class="prompt">未注册的手机号验证通过后将自动注册</text>
    <div class="input">
      <image class="input-icon" src='../../static/code.png'/>
      <input class="input-code" v-model='form.code' maxlength="6" placeholder="请输入手机号">
      <text v-if='second' class="input-code-btn input-code-btn-disabled">{{second}}s后获取</text>
      <text v-else class="input-code-btn v-ob" @click='sendCode'>获取验证码</text>
    </div>
    <!-- #endif -->
    <div class="agreement" @click='selected = !selected'>
      <image class="agreement-icon" v-if='selected' src='../../static/selected.png'/>
      <image class="agreement-icon" v-else src='../../static/select.png'/>
      <text class="agreement-text">已阅读</text>
      <text @click.stop="toAgreement('用户使用手册')" class="agreement-text agreement-text-blue v-ob">《用户使用手册》</text>
      <text class="agreement-text">和</text>
      <text @click.stop="toAgreement('隐私协议')" class="agreement-text agreement-text-blue v-ob">《隐私协议》</text>
    </div>
    <!-- 手机登录 -->
    <!-- #ifdef APP-PLUS -->
    <button class="submit" @click='phoneLogin'>
      <text class="submit-text">登录</text>
    </button>
    <!-- #endif -->

    <!-- 微信登录 -->
    <!-- #ifndef APP-PLUS -->
    <button class="submit" @click='wxLogin'>
      <image class="submit-icon" src='../../static/wxLogin.png'/>
      <text class="submit-text">微信登录</text>
    </button>
    <!-- #endif -->
	</div>
</template>

<script>
	import {Toast} from '../../utils/popup.js'
	export default {
		data () {
			return {
        height: '100%',
        selected: false,
        form: {},
        second: 0,
        wxCode: ''
			}
		},
		created () {
      const safeArea = uni.getSystemInfoSync().safeArea
      this.height = safeArea.height + 'px'
			// #ifdef APP-PLUS
			plus.navigator.setStatusBarStyle('dark') //只支持dark和light
			plus.navigator.setStatusBarBackground("#fff")
			// #endif
		},
		methods: {
			phoneLogin () {
				if (!this.form.phone) {
          return Toast('warning', '请输入手机号')
        }
        if (!this.form.code) {
          return Toast('warning', '请输入验证码')
        }
			},
      wxLogin () {
        const that = this
        uni.login({
          success ({ code }) {
            if (code) that.wxCode = code
          },
          fail () {
            uni.showToast({
              title: '授权失败',
              icon: 'none',
              duration: 3000
            })
          }
        })
        wx.getUserProfile({
          desc: '微信登录',
          success: (res) => {
            if (res.errMsg === 'getUserProfile:ok') {
              this.$Toast('loading', '登录中…')
              const {nickName, avatarUrl, country, gender} = res.userInfo
              const form = {
                code: that.wxCode,
                encryptedData: res.encryptedData,
                iv: res.iv,
                nickName,
                cover: avatarUrl,
                address: country,
                sex: gender
              }
              loginApi(form).then(({data}) => {
                that.baseInfo = {
                  ...data,
                  token: data.Token,
                  avatar: avatarUrl,
                  nickname: nickName,
                  phone: data.UserInfo.phone
                }
                that.loginSuccess()
              })
            }
          }
        })
			},
      // 获取登录
      loginSuccess () {
        uni.setStorageSync('token', this.baseInfo.Token)
        uni.setStorageSync('fromLogin', true)
        this.setUserInfo(this.baseInfo)
        this.getUserInfo()
        this.$toBack()
      },
      sendCode () {
        this.second = 60
        const timer = setInterval(() => {
          this.second--
          if (this.second === 0) {
            clearInterval(timer)
          }
        }, 1000)
      },
      toAgreement (title) {
        uni.navigateTo({
           url: `/pages/common/editorPage?title=${title}`
        });
      }
		}
	}
</script>

<style lang='scss' scoped>
	.container {
    align-items: center;
		background: #fff;
		/* #ifndef APP-PLUS */
    min-height: 100vh;
		/* #endif */
	}
  .name {
    align-items: center;
    padding: 120rpx 0;
    &-logo {
      width: 180rpx;
      height: 180rpx;
      border-radius: 20rpx;
      background: #f8f8f8;
    }
    &-h1 {
      margin-top: 20rpx;
      font-size: 50rpx;
      color: $color;
      font-weight: bold;
    }
  }
  .input {
    width: 666rpx;
    height: 84rpx;
    background: #F5F6F7;
    border-radius: 100rpx;
    flex-direction: row;
    align-items: center;
    padding: 0 32rpx;
    &-icon {
      width: 33rpx;
      height: 33rpx;
      margin-right: 10rpx;
    }
    &-phone, &-code {
      flex: 1;
      font-size: 30rpx;
    }
    &-code-btn {
      line-height: 32rpx;
      width: 168rpx;
      color: #268CF5;
      font-size: 30rpx;
      border-left: 1px;
      border-style: solid;
      border-left-color: #999;
      text-align: right;
      &-disabled {
        color: #999;
      }
    }
  }
  .prompt {
    margin: 10rpx 0 35rpx;
    font-size: 26rpx;
    color: #666;
    width: 666rpx;
    padding: 0 36rpx;
  }
  .agreement {
    margin: 30rpx 0 0;
    width: 666rpx;
    padding: 0 36rpx;
    /* #ifndef APP-PLUS */
    padding: 0 26rpx;
		/* #endif */
    flex-direction: row;
    align-items: center;
    &-icon {
      width: 26rpx;
      height: 26rpx;
      margin-right: 6rpx;
      border-radius: 50%;
      background: #cccccc;
    }
    &-text {
      font-size: 26rpx;
      color: #666;
      &-blue {
        color: #268CF5;
      }
    }
  }
  .submit {
    margin-top: 100rpx;
    /* #ifndef APP-PLUS */
    margin-top: 24rpx;
		/* #endif */
    width: 666rpx;
    height: 84rpx;
    background: #FF9B35;
    border-radius: 100rpx;
    border: 0;
    &-icon {
      width: 44rpx;
      height: 38rpx;
      margin-right: 10rpx;
    }
    &-text {
      font-size: 32rpx;
      color: #fff;
    }
  }
</style>
