<template>
	<div class="container" :style="{height: pageHeight}">
		<m-nav position='sticky' background='#fff'>
			<div class="search" :style="{width: navWdith}">
				<image class="search-icon" src="../../static/search.png" />
				<input v-model="keyword" class="search-input" placeholder="ÊêúÁ¥¢ÊÇ®ÂñúÊ¨¢ÁöÑÁà±Ë±Ü" confirm-type='search'
					@confirm="searchBloger">
				<image v-if="keyword" @click="keyword = ''" class="search-close" src="../../static/close3.png" />
			</div>
			<i class='block'></i>
		</m-nav>
		<div class="list-container">
			<div class="list-container-left" v-if='!isSearched && showView && list.length'>
				<scroll-view scroll-y class="classify" :style="{height}">
					<div class="classify-item" :class="{'classify-item-active': i == selected}"
						v-for="(item, i) in list" :key='item.id' @click="selected = i, scrollTop = 0.01">
						<i class='classify-item-border' :class="{'classify-item-border-active': i == selected}"></i>
						<text class="classify-item-text"
							:class="{'classify-item-text-active': i == selected}">{{item.name}}</text>
					</div>
				</scroll-view>
			</div>
			<scroll-view v-if='rightList.length' scroll-y class='bloger-list' :style="{height}" :scrollTop='scrollTop'>
				<div class='bloger-list-item' :class="'bloger-list-item-' + (index + 1)"
					v-for="(item, index) in rightList" :key='item.id' @click='currentIndex = index'>
					<!-- Â§¥ÂÉè -->
					<m-image @click="toBloger(item)" class="bloger-list-avatar" :src="item.avatar"
						:imageStyle="{width: '76rpx', height: '76rpx', borderRadius: '100rpx'}" />
					<div class="bloger-list-title" @click="toBloger(item)">
						<text class="bloger-list-h1">{{item.name}}</text>
						<text class="bloger-list-span">{{item.remark_name}}</text>
					</div>
					<button class="bloger-list-btn" :class="{'bloger-list-btn-disabled': item.is_follow}"
						@click="focusBloger(item)">
						<text class="bloger-list-plus" v-if="!item.is_follow">+</text><text class="bloger-list-btn-text"
							:class="{'bloger-list-btn-text-disabled': item.is_follow}">{{item.is_follow ? 'Â∑≤ËÆ¢ÈòÖ' : 'ËÆ¢ÈòÖ'}}</text>
					</button>
				</div>
			</scroll-view>
			<m-empty v-else-if='!loading' />
		</div>
	</div>
</template>

<script>
	import mNav from '../../components/m-nav/index.nvue'
	import blogList from '../components/blog-list.nvue'
	import mScroll from '../../components/m-scroll/index.nvue'
	import mImage from '../../components/m-image/index.nvue'
	import mEmpty from '../../components/m-empty/index.nvue'
	import {
		getHotBlogerApi,
		searchBlogerApi
	} from '../../api/find.js'
	import {
		followBlogerApi,
		unFollowBlogerApi
	} from '../../api/homePage.js'
	import {
		Confirm,
		Toast
	} from '../../utils/popup.js'
	import {
		mapGetters,
		mapState
	} from 'vuex'
	const toLogin = () => {
		uni.navigateTo({
			url: '/pages/mine/login'
		})
	}
	export default {
		components: {
			blogList,
			mScroll,
			mNav,
			mImage,
			mEmpty
		},
		data() {
			return {
				pageHeight: 'auto',
				loading: true,
				searchList: [],
				isSearched: false,
				selected: 0,
				keyword: '',
				isFocused: false,
				displayIntro: false,
				list: [],
				navTop: 0,
				barHeight: 0,
				height: '100%',
        scrollTop: 0,
				/** @Tab **/
				tabs: {
					1: 'ËÆ¢ÈòÖ',
					2: 'Êé®Ëçê'
				},
				type: 1,
				navWdith: '702rpx'
			}
		},
		computed: {
			...mapState(['wxappIsPass']),
			...mapGetters(['isLogin']),
			rightList() {
				if (this.isSearched) {
					return this.searchList
				} else if (this.list.length) {
					return this.list[this.selected].list
				} else {
					return []
				}
			},
			showView() {
				const { platform } = getApp().globalData
				return (platform === 'wxapp' && this.wxappIsPass) || platform !== 'wxapp'
			}
		},
		watch: {
			keyword() {
				if (this.isSearched && !this.keyword) {
					this.isSearched = false
				}
			}
		},
		onShareAppMessage() {
			return {
				title: `${this.userInfo.nickname || '‰Ω†ÁöÑÂ•ΩÂèã'}ÈÇÄËØ∑‰Ω†‰ΩøÁî®Goodins`
			}
		},
		created() {
			// ËÆæÁΩÆÊ†∑Âºè
			this.setStyle()
			this.getData()
			// #ifdef MP-WEIXIN
      if (!uni.getStorageSync('downloadAppTips')) {
        this.downloadApp()
      }
			// #endif
		},
		onShow() {
			this.keyword = ''
		},
		onBackPress() {
			if (this.keyword) {
				this.keyword = ''
			} else {
				uni.switchTab({
					url: '/pages/homePage/index'
				})
				return true
			}
		},
		methods: {
			// ÂàóË°®
			getData() {
				getHotBlogerApi().then(({
					data
				}) => {
					this.list = data
				}).finally(() => {
					this.loading = false
				})
			},
			// ÊêúÁ¥¢
			searchBloger() {
				searchBlogerApi({
					keyword: this.keyword
				}).then(({
					data
				}) => {
					this.searchList = data
					this.isSearched = true
				})
			},
			// Âçö‰∏ªÈ°µÈù¢
			toBloger(item) {
				if (!this.showView) return
				uni.navigateTo({
					url: `/pages/homePage/bloger?id=${item.id}`
				})
			},
			// ÂàáÊç¢Tab
			changeTab(type) {
				this.type = type
			},
			// Âà∑Êñ∞ÂàóË°®
			changeItem(item, index) {
				const list = [...this.list]
				list[index] = {
					...item
				}
				this.list = [...list]
			},
			//‰∏ãËΩΩappÊèêÁ§∫
			downloadApp() {
        this.$Alert(
          'ÊèêÁ§∫',
          'Goodins AppÂ∑≤‰∏äÊû∂ios app store„ÄÅÂçé‰∏∫„ÄÅÂ∞èÁ±≥„ÄÅoppo„ÄÅvivo„ÄÅÈ≠ÖÊóè„ÄÅÂ∫îÁî®ÂÆù„ÄÅ‰∏âÊòüÁ≠âÂ∫îÁî®Â∏ÇÂú∫Ôºå‰ΩìÈ™åÂÆåÊï¥ÂäüËÉΩËØ∑Âà∞Ëá™Â∑±ÊâãÊú∫Â∫îÁî®Â∏ÇÂú∫ÊêúÁ¥¢ÂÆâË£Ö„ÄÇ',
          'Â•ΩÁöÑ',
          () => {
            uni.setStorageSync('downloadAppTips', true)
          }
        )
			},
			// ËÆ¢ÈòÖüíó
			focusBloger(item) {
				if (!this.isLogin) return toLogin()
				if (item.is_follow) {
					Confirm(
						'ÊèêÁ§∫',
						'Á°ÆÂÆöÂèñÊ∂àËÆ¢ÈòÖÂêóÔºü',
						'Á°ÆÂÆö',
						() => {
							unFollowBlogerApi({
								id: item.id
							}).then(() => {
								item.is_follow = false
								Toast('success', 'Â∑≤ÂèñÊ∂àËÆ¢ÈòÖÔºÅ')
								this.changeItem()
							})
						}
					)
				} else {
					followBlogerApi({
						id: item.id
					}).then(data => {
						item.is_follow = true
						Toast('success', 'Â∑≤ËÆ¢ÈòÖÔºÅ')
						this.changeItem()
					})
				}
			},
			setStyle() {
				const {screenHeight,windowHeight, safeArea} = uni.getSystemInfoSync()
				// this.barHeight = safeArea.bottom - safeArea.height + 'rpx'
				// #ifdef APP-PLUS
				// ÂØºËà™Ê†èÈ´òÂ∫¶
				this.navTop = safeArea.top
        console.log(uni.getSystemInfoSync())
				// ÂØºËà™Ê†èÁîµÊ±†„ÄÅÊó∂Èó¥È¢úËâ≤
				plus.navigator.setStatusBarStyle('light') //Âè™ÊîØÊåÅdarkÂíålight
				this.height = safeArea.bottom - safeArea.top - 35 - 10 + 1 + 'px'
				this.pageHeight = windowHeight + 'px'
				// #endif


				// #ifdef MP-WEIXIN
				// ÂØºËà™Ê†èÈ´òÂ∫¶
        const {top, height} = uni.getMenuButtonBoundingClientRect()
				this.height = `calc(100vh - ${top + height + 12}px)`
				this.navWdith = uni.getSystemInfoSync().safeArea.width - 28 - uni.getMenuButtonBoundingClientRect().width - 2 + 'px'
				this.navTop = uni.getMenuButtonBoundingClientRect().top + 8
				// #endif
			}
		}
	}
</script>

<style lang='scss' scoped>
	.container {
		background: #fff;
		/* #ifndef APP-PLUS */
		display: block;

		/* #endif */
		&-bg {
			width: 750rpx;
		}
	}

	.block {
		background: #fff;
		width: 750rpx;
		height: 20rpx;
		box-shadow: 0px 1px 2px 0px rgba(81, 87, 100, 0.1);
	}

	.search {
		margin: -4rpx 28rpx 0;
		flex-direction: row;
		align-items: center;
		width: 702rpx;
		background: #F5F6F7;
		border-radius: 100rpx;
		padding: 0 20rpx;

		&-icon {
			width: 32rpx;
			height: 32rpx;
		}

		&-input {
			height: 70rpx;
			margin-left: 15rpx;
			flex: 1;
			height: 70rpx;
			font-size: 28rpx;
		}

		&-close {
			width: 36rpx;
			height: 36rpx;
		}
	}

	.list-container {
		flex-direction: row;

		&-left {
			width: 210rpx;
		}
	}

	.classify {
		width: 210rpx;
		background: #F5F6F7;

		&-item {
			width: 210rpx;
			height: 110rpx;
			align-items: center;
			justify-content: center;
			background: #F5F6F7;
			position: relative;

			&-active {
				background: #fff;
			}

			&-border {
				left: 0;
				position: absolute;
				height: 46rpx;
				width: 6rpx;
				background: transparent;

				&-active {
					background: $color;
				}
			}

			&-text {
				color: #333;
				font-size: 32rpx;

				&-active {
					color: $color;
				}
			}
		}
	}

	.bloger-list {
		flex: 1;
    background: #fff;

		&-item {
			padding: 24rpx 24rpx 0 24rpx;
			background-color: #fff;
			flex-direction: row;
			align-items: center;
			margin-bottom: 18rpx;
		}

		&-h1 {
			font-size: 32rpx;
			color: #333;
		}

		&-span {
			color: #999;
			font-size: 24rpx;
		}

		&-title {
			margin-left: 26rpx;
			flex: 1;
		}

		&-btn {
			width: 125rpx;
			height: 50rpx;
			border: 1rpx solid #FF9B35;
			border-radius: 100rpx;
			background: $color;

			&-text {
				font-size: 26rpx;
				color: #fff;

				&-disabled {
					color: #999;
				}
			}

			&-disabled {
				background: #fff !important;
				border: 1px;
				border-style: solid;
				border-color: #999;
			}
		}

		&-plus {
			font-size: 36rpx;
			color: #fff;
			position: relative;
			top: -2rpx;
			margin-right: 4rpx;
		}
	}
</style>
