<template>
	<div>
		<ul class='blog-list'>
			<slot/>
			<li class='blog-list-item' :class="'blog-list-item-' + (index + 1)" v-for="(item, index) in list" :key='index' @click='currentIndex = index'>
				<!-- 头像 -->
				<div class="top">
					<m-image @click="toBloger(item)" class="top-avatar" :src="item.avatar" :imageStyle="{width: '76rpx', height: '76rpx', borderRadius: '50%'}"/>
					<div class="top-title">
						<text class="top-h1">{{item.nickname}}</text>
						<text class="top-span">{{item.createTime}}</text>
					</div>
					<button class="top-btn" v-if="!item.isFocused" @click="focusBloger(item)">
						<text class="top-plus">+</text><text class="top-btn-text">关注</text>
					</button>
					<view class="top-arrow v-ob" @click="showActionSheet(item)"><image class="top-arrow-icon" src="../../static/bottom.png"/></view>
				</div>
				<!-- 内容 -->
				<div class="middle">
					<text class="middle-content">{{item.content}}</text>
					<text class="middle-translate v-ob">查看翻译</text>
					<!-- 视频 -->
					<div class="video" v-if="item.videoUrl">
						<video class="video-item" :src="item.videoUrl" controls/>
					</div>
					<!-- 图片 -->
					<ul v-else class='pics' :class="'pics-' + item.pics.length">
						<li
							v-for="(pic, i) in item.pics.slice(0, 9)"
							:key='i'
							class='pics-li'
							:class="['pics-li-' + (i + 1), item.pics.length == 4 && i == 3 ? 'pics-li-4-4' : '']"
							@click='previewPic(item.pics, i, item)'>
							<m-image class="pics-item" :src="pic" :imageStyle="imageStyle(item.pics)"/>
							<text class="pics-number" v-if="i == 8">{{item.pics.length - 9}}+</text>
						</li>
					</ul>
				</div>
				<!-- 操作栏 -->
				<ul class="bottom">
					<li class='bottom-item v-ob' @click='showShare(item)'>
						<image class='bottom-icon' src="../../static/share.png"/>
						<text class='bottom-text'>分享</text>
					</li>
					<li class='bottom-item v-ob' @click='collectBlog(item)'>
						<image class='bottom-icon' v-if="item.isCollect" src="../../static/collects.png"/>
						<image class='bottom-icon' v-else src="../../static/collect.png"/>
					</li>
					<li class='bottom-item v-ob' @click='likeBlog(item)'>
						<image class='bottom-icon' v-if="item.isLiked" src="../../static/goods.png"/>
						<image class='bottom-icon' v-else src="../../static/good.png"/>
						<text class='bottom-text' :class="{'bottom-text-orange': item.isLiked}" v-if="item.likeCount">{{item.likeCount}}</text>
					</li>
				</ul>
			</li>
		</ul>
		<m-popup title='分享给好友' v-model="showPopup" height="295rpx">
			<div slot='content' class="shareBlog">
				<div class="shareBlog-item v-ob">
					<image class='shareBlog-icon' src="../../static/wx.png"/>
					<text class='shareBlog-text'>微信好友</text>
				</div>
				<div class="shareBlog-item v-ob" @click="downloadImage">
					<image class='shareBlog-icon' src="../../static/downloadPic.png"/>
					<text class='shareBlog-text'>下载图片</text>
				</div>
			</div>
		</m-popup>
		<m-preview ref='mPreview' :customNav='customNav'/>
	</div>
</template>

<script>
	import {Toast, Confirm} from '../../utils/popup.js'
	import mPopup from '../../components/m-popup/index.nvue'
	import mImage from '../../components/m-image/index.nvue'
	import mPreview from '../../components/m-preview/index.nvue'
	export default {
		props: {
			list: Array,
      customNav: Boolean
		},
		components: {
			mPopup, mImage, mPreview
		},
		data () {
			return {
				showPopup: false,
				currentIndex: null,
				currentItem: {}
			}
		},
		methods: {
			// 打开菜单📖
			showActionSheet (item) {
				const that = this
				const itemList = [item.isFocused ? '取消关注' : '', '举报'].filter(item => item)
				uni.showActionSheet({
					itemList,
					success ({tapIndex}) {
						const menu = itemList[tapIndex]
						if (menu === '取消关注') {
							that.focusBloger(item)
						} else {
							that.reportBloger(item)
						}
					}
				})
			},
			// 关注💗
			focusBloger (item) {
				if (item.isFocused) {
					Confirm(
						'提示',
						'确定取消关注吗？',
						'确定',
						() => {
							item.isFocused = false
							Toast('success', '已取消关注！')
							this.changeItem()
						}
					)
				} else {
					item.isFocused = true
					Toast('success', '已关注！')
					this.changeItem()
				}
			},
			// 收藏📦
			collectBlog (item) {
				if (item.isCollect) {
					Confirm(
						'提示',
						'确定取消收藏吗？',
						'确定',
						() => {
							item.isCollect = false
							Toast('success', '已取消收藏！')
							this.changeItem()
						}
					)
				} else {
					item.isCollect = true
					Toast('success', '已收藏！')
					this.changeItem()
				}
			},
			// 点赞👍
			likeBlog (item) {
				item.isLiked = !item.isLiked
				item.likeCount += item.isLiked ? 1 : -1
				this.changeItem()
			},
			// 举报👮
			reportBloger (item) {
				console.log('举报', item)
			},
			// 分享➡
			showShare (item) {
				this.currentItem = {...item}
				this.showPopup = true
			},
			// 修改源数据
			changeItem (item) {
				this.$emit('changeItem', this.list[this.currentIndex], this.currentIndex)
			},
			// 博主页面
			toBloger (item) {
				uni.navigateTo({url: `/pages/homePage/bloger?id=${item.id}`})
			},
			// 获取图片大小
			imageStyle (pics = []) {
				if (pics.length === 1) {
					return {width: '462rpx', height: '347rpx', borderRadius: '4rpx'}
				} else {
					return {width: '225rpx', height: '225rpx', borderRadius: '4rpx'}
				}
			},
			// 下载图片
			downloadImage () {
				if (!this.currentItem.pics.length) {
					return Toast('warning', '暂无图片~')
				}
				uni.setStorageSync('imageList', this.currentItem.pics)
				uni.navigateTo({url: '/pages/homePage/downloadImage'})
				this.showPopup = false
			},
			previewPic (list, current, info) {
				this.$refs.mPreview.previewImage(list, current, info)
			}
		}
	}
</script>

<style lang='scss' scoped>
	.blog-list {
		&-item {
			margin: 0 0 20rpx;
			padding: 22rpx 26rpx;
			background-color: #fff;
			&-1 {
				margin-top: 20rpx;
			}
		}
	}
	.top {
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 18rpx;
		&-h1 {
			font-size: 32rpx;
			color: #333;
		}
		&-span {
			color: #999;
			font-size: 24rpx;
		}
		&-title {
			margin-left: 26rpx;
			flex: 1;
		}
		&-btn {
			width: 125rpx;
			height: 50rpx;
			border: 1rpx solid #FF9B35;
			border-radius: 100rpx;
			background: #fff;
			&-text {
				font-size: 26rpx;
				color: #FF9B35;
			}
		}
		&-plus {
			font-size: 36rpx;
			color: #FF9B35;
			position: relative;
			top: -2rpx;
			margin-right: 4rpx;
		}
		&-arrow {
			padding: 15rpx;
			margin-right: -15rpx;
			&-icon {
				width: 25rpx;
				height: 25rpx;
			}
		}
	}
	.middle {
		&-content {
			color: #333;
			font-size: 30rpx;
			line-height: 42rpx;
		}
		&-translate {
			color: #268CF5;
			font-size: 30rpx;
		}
	}
	.pics {
		flex-direction: row;
		flex-wrap: wrap;
		padding-bottom: 20rpx;
		margin-top: 10rpx;
		&-li {
			position: relative;
			margin: 6rpx 0;
			&-2, &-5, &-8 {
				margin: 6rpx 12rpx;
			}
			&-4-4 {
				margin-left: 12rpx;
			}
		}
		&-number {
			border-radius: 4rpx;
			position: absolute;
			top: 0;
			bottom: 0;
			right: 0;
			left: 0;
			background-color: rgba(0, 0, 0, 0.4);
			text-align: center;
			line-height: 225rpx;
			color: #fff;
			font-size: 42rpx;
		}
		&-4 {
			width: 500rpx;
		}
	}
	.video {
		margin-top: 10rpx;
		border-radius: 4rpx;
		overflow: hidden;
		&-item {
			width: 700rpx;
			height: 420rpx;
		}
	}
	.bottom {
		border-top-width: 1rpx;
		border-style: solid;
		border-color: $border;
		flex-direction: row;
		justify-content: space-between;
		&-item {
			padding: 20rpx 0 0;
			flex-direction: row;
			align-items: center;
			justify-content: center;
			flex: 1;
		}
		&-icon {
			width: 28rpx;
			height: 28rpx;
		}
		&-text {
			color: #666;
			font-size: 26rpx;
			margin-left: 6rpx;
			&-orange {
				color: $color;
			}
		}
	}
	.shareBlog {
		padding: 10rpx 30rpx 30rpx;
		/* #ifndef APP-PLUS */
		padding-bottom: calc(30rpx + env(safe-area-inset-bottom));
		/* #endif */
		flex-direction: row;
		justify-content: center;
		&-item {
			align-items: center;
			margin: 0 86rpx;
		}
		&-icon {
			width: 84rpx;
			height: 84rpx;
		}
		&-text {
			font-size: 28rpx;
			color: #333;
			margin-top: 20rpx;
		}
	}
</style>
